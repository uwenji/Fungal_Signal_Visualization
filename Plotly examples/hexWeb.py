import numpy as np
import dash
import dash_cytoscape as cyto
from dash import html
import pandas as pd

styles = {
    'pre': {
        'border': 'thin lightgrey solid',
        'overflowX': 'scroll'
    }
}
nodes = [
    {
        'data': {'id': short, 'label': label},
        'position': {'x': lat, 'y': long},
        'locked':True
    }
    for short, label, long, lat in (
        (0,0,-1.2715657931e-05,0.0), 
        (1,1,164.721641541,2.91433543964e-15), 
        (2,2,-82.3608398438,-142.653141022), 
        (3,3,82.3608207703,-142.653141022), 
        (4,4,-164.721679688,2.31065167e-14), 
        (5,5,-82.3608398438,142.653141022), 
        (6,6,82.3608207703,142.653141022), 
        (7,7,329.443321228,5.82867087928e-15), 
        (8,8,247.082481384,142.653141022), 
        (9,9,247.082481384,-142.653141022), 
        (10,10,164.721660614,-285.306282043), 
        (11,11,-6.35782896552e-06,-285.306282043), 
        (12,12,-164.721660614,-285.306282043), 
        (13,13,-247.082481384,-142.653141022), 
        (14,14,-329.443321228,4.62130334e-14), 
        (15,15,-247.082481384,142.653141022), 
        (16,16,-164.721660614,285.306282043), 
        (17,17,-6.35782896552e-06,285.306282043), 
        (18,18,164.721660614,285.306282043), 
        (19,19,329.443321228,285.306282043), 
        (20,20,411.804161072,142.653141022), 
        (21,21,494.164962769,8.74300631892e-15), 
        (22,22,411.804161072,-142.653141022), 
        (23,23,329.443321228,-285.306282043), 
        (24,24,247.082481384,-427.959442139), 
        (25,25,82.3608303070,-427.959442139), 
        (26,26,-82.3608303070,-427.959442139), 
        (27,27,-247.082481384,-427.959442139), 
        (28,28,-329.443321228,-285.306282043), 
        (29,29,-411.804161072,-142.653141022), 
        (30,30,-494.164962769,6.93195501e-14), 
        (31,31,-411.804161072,142.653141022), 
        (32,32,-329.443321228,285.306282043), 
        (33,33,-247.082481384,427.959442139), 
        (34,34,-82.3608303070,427.959442139), 
        (35,35,82.3608303070,427.959442139), 
        (36,36,247.082481384,427.959442139), 
        (37,37,494.164962769,285.306282043), 
        (38,38,576.525802612,142.653141022), 
        (39,39,658.886642456,1.16573417586e-14), 
        (40,40,494.164962769,-285.306282043), 
        (41,41,411.804122925,-427.959442139), 
        (42,42,329.443321228,-570.612564087), 
        (43,43,164.721641541,-570.612564087), 
        (44,44,0.0,-570.612564087), 
        (45,45,-164.721641541,-570.612564087), 
        (46,46,-329.443321228,-570.612564087), 
        (47,47,-411.804122925,-427.959442139), 
        (48,48,-494.164962769,-285.306282043), 
        (49,49,-576.525802612,-142.653141022), 
        (50,50,-658.886642456,9.24260668e-14), 
        (51,51,-576.525802612,142.653141022), 
        (52,52,-494.164962769,285.306282043), 
        (53,53,-411.804122925,427.959442139), 
        (54,54,-329.443321228,570.612564087), 
        (55,55,-164.721641541,570.612564087), 
        (56,56,0.0,570.612564087), 
        (57,57,164.721641541,570.612564087), 
        (58,58,329.443321228,570.612564087), 
        (59,59,411.804122925,427.959442139), 
        (60,60,576.525802612,-142.653141022)
    )
]
connections = [
    (0,1),
    (0,3),
    (0,2),
    (0,4),
    (0,5),
    (0,6),
    (1,6),
    (1,8),
    (1,7),
    (1,9),
    (2,3),
    (3,11),
    (3,10),
    (3,9),
    (1,3),
    (2,11),
    (2,12),
    (2,13),
    (4,2),
    (4,13),
    (4,14),
    (4,15),
    (5,4),
    (5,15),
    (5,16),
    (5,17),
    (6,5),
    (6,17),
    (6,18),
    (6,8),
    (7,20),
    (7,8),
    (8,20),
    (8,19),
    (8,18),
    (7,21),
    (7,22),
    (7,9),
    (9,22),
    (9,23),
    (10,9),
    (10,23),
    (10,24),
    (10,25),
    (11,10),
    (11,25),
    (11,26),
    (12,11),
    (12,26),
    (12,27),
    (12,28),
    (13,12),
    (13,28),
    (13,29),
    (14,13),
    (14,29),
    (14,30),
    (14,31),
    (15,14),
    (15,31),
    (15,32),
    (16,15),
    (16,32),
    (16,33),
    (16,34),
    (17,16),
    (17,34),
    (17,35),
    (18,17),
    (18,35),
    (18,36),
    (18,19),
    (19,36),
    (19,59),
    (19,37),
    (20,19),
    (20,37),
    (20,38),
    (21,20),
    (21,38),
    (21,39),
    (21,60),
    (21,22),
    (22,60),
    (22,40),
    (23,22),
    (23,40),
    (23,41),
    (24,23),
    (24,41),
    (24,42),
    (24,43),
    (25,24),
    (25,43),
    (25,44),
    (26,25),
    (26,44),
    (26,45),
    (27,26),
    (27,45),
    (27,46),
    (27,47),
    (28,27),
    (28,47),
    (28,48),
    (29,28),
    (29,48),
    (29,49),
    (30,29),
    (30,49),
    (30,50),
    (30,51),
    (31,30),
    (31,51),
    (31,52),
    (32,31),
    (32,52),
    (32,53),
    (33,32),
    (33,53),
    (33,54),
    (33,55),
    (34,33),
    (34,55),
    (34,56),
    (35,34),
    (35,56),
    (35,57),
    (36,35),
    (36,57),
    (36,58),
    (36,59),
    (37,59),
    (38,37),
    (39,38),
    (39,60),
    (40,60),
    (41,40),
    (42,41),
    (43,42),
    (44,43),
    (45,44),
    (46,45),
    (47,46),
    (48,47),
    (49,48),
    (50,49),
    (51,50),
    (52,51),
    (53,52),
    (54,53),
    (55,54),
    (56,55),
    (57,56),
    (58,57),
    (59,58)]
edges = []
for i in range(len(connections)):
    edges.append(
        {'data': {'source': connections[i][0], 'target': connections[i][1], 'R':0, 'G':0, 'B':0},
     'classes': str(i)}
    )
moveingNode = [
    {'data': {'id': 'ed', 'label': 'Moveing'},
     'position': {'x': 150, 'y': 50},
                },
]

def rgb_to_hex(r, g, b):
  return '#'+('{:X}{:X}{:X}').format(r, g, b)

colors = np.random.rand(1)

app = dash.Dash(__name__)
app.layout = html.Div([
    cyto.Cytoscape(
        id='cytoscape',
        layout={'name': 'preset'},
        elements=edges+nodes+moveingNode,
        stylesheet=[
            {
                'selector': 'node',
                'style': {
                    'background-color': '#BFD7B5',
                    'label': 'data(label)'
                }
            },
                {
                    'selector': '[R <= 3]',
                    'style': {
                        'line-color': '#ff66cc'
                        }
                },
        ],
        style={'width': '100%', 'height': '600px'}
    ),
    
])


if __name__ == '__main__':
    app.run_server(debug=True, port = 8070)